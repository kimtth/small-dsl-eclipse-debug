/**
 * generated by Xtext 2.12.0
 */
package org.xtext.labs.ui.wizard;

import com.google.inject.Inject;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.resource.FileExtensionProvider;

@SuppressWarnings("all")
public class MydslNewProjectWizardInitialContents {
  @Inject
  private FileExtensionProvider fileExtensionProvider;
  
  public void generateInitialContents(final IFileSystemAccess2 fsa) {
    String _primaryFileExtension = this.fileExtensionProvider.getPrimaryFileExtension();
    String _plus = ("src/prototype." + _primaryFileExtension);
    fsa.generateFile(_plus, 
      this.makeDSLContents());
  }
  
  public String makeDSLContents() {
    StringBuffer src = new StringBuffer();
    src.append("var g : num\n");
    src.append("def function(num a, num b){\n\n");
    src.append("\tval local : num\n");
    src.append("\tval localStr : string\n\n");
    src.append("\tif(a == b){\n\n");
    src.append("\t}else{\n\n");
    src.append("\t}\n\n");
    src.append("\tlocal = 10\n");
    src.append("\tlocalStr = \"ssss\"\n\n");
    src.append("\twhile(a < 10){\n\n");
    src.append("\t\tif(a != b){\n");
    src.append("\t\t\tbreak\n");
    src.append("\t\t}\n");
    src.append("\t}\n");
    src.append("\treturn a\n");
    src.append("}");
    src.append("\n\n");
    src.append("launch_main(){\n");
    src.append("\tval a : num\n");
    src.append("\tval b : num\n");
    src.append("\tval c : string\n\n");
    src.append("\ta = function(a, b)\n");
    src.append("}");
    src.append("\n\n");
    return src.toString();
  }
}
