/*
 * generated by Xtext 2.12.0
 */
package org.xtext.labs.ui.quickfix

import org.eclipse.xtext.xbase.ui.quickfix.XbaseQuickfixProvider
import org.xtext.labs.validation.MydslValidator
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
class MydslQuickfixProvider extends XbaseQuickfixProvider {

	@Fix(MydslValidator.INVALID_BREAK)
	def removeBreakStr(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Remove Break', 'Remove Break.', 'dsl_fix.gif') [ context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 5, "")
		]
	}
	
	@Fix(MydslValidator.INVALID_DUPLICATE)
	def removeDuplicateVar(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 'Remove Duplicated Variable', 'Remove Duplicated Variable.', 'dsl_fix.gif') [ context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, issue.length, "")
		]
	}
	
	@Fix(MydslValidator.INVALID_FUNCTION_DUPLICATE)
	def removeDuplicateSub(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 'Remove Duplicated Function name', 'Remove Duplicated Function name.', 'dsl_fix.gif') [ context |
			val xtextDocument = context.xtextDocument
			val doc = xtextDocument.get(issue.offset, 200) //Max sub name length 200
			var subName = doc.trim()
			subName = subName.substring(0, subName.indexOf("\n"));
			xtextDocument.replace(issue.offset, subName.length, 'SUB_'+subName)
		]
	}
	
	@Fix(MydslValidator.INVALID_TYPES)
	def removeInValidType(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 'Remove Incompatible Variable', 'Remove Incompatible Variable.', 'dsl_fix.gif') [ context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, issue.length, "")
		]
	}
}
