/**
 * generated by Xtext 2.12.0
 */
package org.xtext.labs.mydsl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.labs.mydsl.MydslFactory
 * @model kind="package"
 * @generated
 */
public interface MydslPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mydsl";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/labs/Mydsl";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mydsl";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MydslPackage eINSTANCE = org.xtext.labs.mydsl.impl.MydslPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.DSLProgramImpl <em>DSL Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.DSLProgramImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getDSLProgram()
   * @generated
   */
  int DSL_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Global</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DSL_PROGRAM__GLOBAL = 0;

  /**
   * The feature id for the '<em><b>Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DSL_PROGRAM__FUNC = 1;

  /**
   * The feature id for the '<em><b>Main</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DSL_PROGRAM__MAIN = 2;

  /**
   * The number of structural features of the '<em>DSL Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DSL_PROGRAM_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.mainDeclaredImpl <em>main Declared</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.mainDeclaredImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getmainDeclared()
   * @generated
   */
  int MAIN_DECLARED = 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_DECLARED__BODY = 0;

  /**
   * The number of structural features of the '<em>main Declared</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_DECLARED_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.BodyStatementImpl <em>Body Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.BodyStatementImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getBodyStatement()
   * @generated
   */
  int BODY_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>Body Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY_STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varReturnImpl <em>var Return</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varReturnImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarReturn()
   * @generated
   */
  int VAR_RETURN = 3;

  /**
   * The feature id for the '<em><b>Rtn</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_RETURN__RTN = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>var Return</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_RETURN_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varDeclaredImpl <em>var Declared</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varDeclaredImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarDeclared()
   * @generated
   */
  int VAR_DECLARED = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__NAME = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__TYPE = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Scope</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__SCOPE = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Dim</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__DIM = BODY_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>var Declared</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varExpressionImpl <em>var Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varExpressionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarExpression()
   * @generated
   */
  int VAR_EXPRESSION = 5;

  /**
   * The number of structural features of the '<em>var Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPRESSION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.TerminalImpl <em>Terminal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.TerminalImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getTerminal()
   * @generated
   */
  int TERMINAL = 6;

  /**
   * The number of structural features of the '<em>Terminal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varSymbolImpl <em>var Symbol</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varSymbolImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarSymbol()
   * @generated
   */
  int VAR_SYMBOL = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL__TYPE = 1;

  /**
   * The number of structural features of the '<em>var Symbol</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.TerminalOrMethodImpl <em>Terminal Or Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.TerminalOrMethodImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getTerminalOrMethod()
   * @generated
   */
  int TERMINAL_OR_METHOD = 8;

  /**
   * The number of structural features of the '<em>Terminal Or Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMINAL_OR_METHOD_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.arrayDimensionImpl <em>array Dimension</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.arrayDimensionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getarrayDimension()
   * @generated
   */
  int ARRAY_DIMENSION = 9;

  /**
   * The feature id for the '<em><b>Index</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_DIMENSION__INDEX = 0;

  /**
   * The feature id for the '<em><b>Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_DIMENSION__SIZE = 1;

  /**
   * The number of structural features of the '<em>array Dimension</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_DIMENSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.AbstractMethodCallImpl <em>Abstract Method Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.AbstractMethodCallImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getAbstractMethodCall()
   * @generated
   */
  int ABSTRACT_METHOD_CALL = 13;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD_CALL__ARGS = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Abstract Method Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD_CALL_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.FuncCallImpl <em>Func Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.FuncCallImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncCall()
   * @generated
   */
  int FUNC_CALL = 10;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__ARGS = ABSTRACT_METHOD_CALL__ARGS;

  /**
   * The feature id for the '<em><b>Func</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__FUNC = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Func Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL_FEATURE_COUNT = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.FuncParameterImpl <em>Func Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.FuncParameterImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncParameter()
   * @generated
   */
  int FUNC_PARAMETER = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER__NAME = VAR_SYMBOL__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER__TYPE = VAR_SYMBOL__TYPE;

  /**
   * The number of structural features of the '<em>Func Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER_FEATURE_COUNT = VAR_SYMBOL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.FuncDefinitionImpl <em>Func Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.FuncDefinitionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncDefinition()
   * @generated
   */
  int FUNC_DEFINITION = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__ARGS = 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__BODY = 2;

  /**
   * The number of structural features of the '<em>Func Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.StdFunctionImpl <em>Std Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.StdFunctionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getStdFunction()
   * @generated
   */
  int STD_FUNCTION = 14;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION__ARGS = ABSTRACT_METHOD_CALL__ARGS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION__NAME = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Std Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION_FEATURE_COUNT = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.IfExpressionImpl <em>If Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.IfExpressionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getIfExpression()
   * @generated
   */
  int IF_EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Ifconditon</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__IFCONDITON = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__THEN = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__ELSE = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.DoWhileExpressionImpl <em>Do While Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.DoWhileExpressionImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getDoWhileExpression()
   * @generated
   */
  int DO_WHILE_EXPRESSION = 16;

  /**
   * The feature id for the '<em><b>Loop Conditon</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION__LOOP_CONDITON = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION__BODY = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Do While Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.BrkStrImpl <em>Brk Str</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.BrkStrImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getBrkStr()
   * @generated
   */
  int BRK_STR = 17;

  /**
   * The feature id for the '<em><b>Brk</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRK_STR__BRK = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Brk Str</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRK_STR_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varAssignmentImpl <em>var Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varAssignmentImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarAssignment()
   * @generated
   */
  int VAR_ASSIGNMENT = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>var Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.StringRefImpl <em>String Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.StringRefImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getStringRef()
   * @generated
   */
  int STRING_REF = 19;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_REF__VALUE = TERMINAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_REF_FEATURE_COUNT = TERMINAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.numRefImpl <em>num Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.numRefImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getnumRef()
   * @generated
   */
  int NUM_REF = 20;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_REF__VALUE = TERMINAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>num Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_REF_FEATURE_COUNT = TERMINAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.boolRefImpl <em>bool Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.boolRefImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getboolRef()
   * @generated
   */
  int BOOL_REF = 21;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_REF__VAR_REF = TERMINAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>bool Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_REF_FEATURE_COUNT = TERMINAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.arrayRefImpl <em>array Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.arrayRefImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getarrayRef()
   * @generated
   */
  int ARRAY_REF = 22;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__VAR_REF = TERMINAL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dim</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__DIM = TERMINAL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>array Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF_FEATURE_COUNT = TERMINAL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.labs.mydsl.impl.varRefImpl <em>var Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.labs.mydsl.impl.varRefImpl
   * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarRef()
   * @generated
   */
  int VAR_REF = 23;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF__VAR_REF = TERMINAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>var Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF_FEATURE_COUNT = TERMINAL_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.DSLProgram <em>DSL Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>DSL Program</em>'.
   * @see org.xtext.labs.mydsl.DSLProgram
   * @generated
   */
  EClass getDSLProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.DSLProgram#getGlobal <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Global</em>'.
   * @see org.xtext.labs.mydsl.DSLProgram#getGlobal()
   * @see #getDSLProgram()
   * @generated
   */
  EReference getDSLProgram_Global();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.DSLProgram#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Func</em>'.
   * @see org.xtext.labs.mydsl.DSLProgram#getFunc()
   * @see #getDSLProgram()
   * @generated
   */
  EReference getDSLProgram_Func();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.labs.mydsl.DSLProgram#getMain <em>Main</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Main</em>'.
   * @see org.xtext.labs.mydsl.DSLProgram#getMain()
   * @see #getDSLProgram()
   * @generated
   */
  EReference getDSLProgram_Main();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.mainDeclared <em>main Declared</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>main Declared</em>'.
   * @see org.xtext.labs.mydsl.mainDeclared
   * @generated
   */
  EClass getmainDeclared();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.mainDeclared#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.labs.mydsl.mainDeclared#getBody()
   * @see #getmainDeclared()
   * @generated
   */
  EReference getmainDeclared_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.BodyStatement <em>Body Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Body Statement</em>'.
   * @see org.xtext.labs.mydsl.BodyStatement
   * @generated
   */
  EClass getBodyStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varReturn <em>var Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Return</em>'.
   * @see org.xtext.labs.mydsl.varReturn
   * @generated
   */
  EClass getvarReturn();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.labs.mydsl.varReturn#getRtn <em>Rtn</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rtn</em>'.
   * @see org.xtext.labs.mydsl.varReturn#getRtn()
   * @see #getvarReturn()
   * @generated
   */
  EReference getvarReturn_Rtn();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varDeclared <em>var Declared</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Declared</em>'.
   * @see org.xtext.labs.mydsl.varDeclared
   * @generated
   */
  EClass getvarDeclared();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.varDeclared#getScope <em>Scope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scope</em>'.
   * @see org.xtext.labs.mydsl.varDeclared#getScope()
   * @see #getvarDeclared()
   * @generated
   */
  EAttribute getvarDeclared_Scope();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.varDeclared#getDim <em>Dim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dim</em>'.
   * @see org.xtext.labs.mydsl.varDeclared#getDim()
   * @see #getvarDeclared()
   * @generated
   */
  EReference getvarDeclared_Dim();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varExpression <em>var Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Expression</em>'.
   * @see org.xtext.labs.mydsl.varExpression
   * @generated
   */
  EClass getvarExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.Terminal <em>Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Terminal</em>'.
   * @see org.xtext.labs.mydsl.Terminal
   * @generated
   */
  EClass getTerminal();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varSymbol <em>var Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Symbol</em>'.
   * @see org.xtext.labs.mydsl.varSymbol
   * @generated
   */
  EClass getvarSymbol();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.varSymbol#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.labs.mydsl.varSymbol#getName()
   * @see #getvarSymbol()
   * @generated
   */
  EAttribute getvarSymbol_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.varSymbol#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.labs.mydsl.varSymbol#getType()
   * @see #getvarSymbol()
   * @generated
   */
  EAttribute getvarSymbol_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.TerminalOrMethod <em>Terminal Or Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Terminal Or Method</em>'.
   * @see org.xtext.labs.mydsl.TerminalOrMethod
   * @generated
   */
  EClass getTerminalOrMethod();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.arrayDimension <em>array Dimension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array Dimension</em>'.
   * @see org.xtext.labs.mydsl.arrayDimension
   * @generated
   */
  EClass getarrayDimension();

  /**
   * Returns the meta object for the reference '{@link org.xtext.labs.mydsl.arrayDimension#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Index</em>'.
   * @see org.xtext.labs.mydsl.arrayDimension#getIndex()
   * @see #getarrayDimension()
   * @generated
   */
  EReference getarrayDimension_Index();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.arrayDimension#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Size</em>'.
   * @see org.xtext.labs.mydsl.arrayDimension#getSize()
   * @see #getarrayDimension()
   * @generated
   */
  EAttribute getarrayDimension_Size();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.FuncCall <em>Func Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Call</em>'.
   * @see org.xtext.labs.mydsl.FuncCall
   * @generated
   */
  EClass getFuncCall();

  /**
   * Returns the meta object for the reference '{@link org.xtext.labs.mydsl.FuncCall#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Func</em>'.
   * @see org.xtext.labs.mydsl.FuncCall#getFunc()
   * @see #getFuncCall()
   * @generated
   */
  EReference getFuncCall_Func();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.FuncParameter <em>Func Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Parameter</em>'.
   * @see org.xtext.labs.mydsl.FuncParameter
   * @generated
   */
  EClass getFuncParameter();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.FuncDefinition <em>Func Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Definition</em>'.
   * @see org.xtext.labs.mydsl.FuncDefinition
   * @generated
   */
  EClass getFuncDefinition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.FuncDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.labs.mydsl.FuncDefinition#getName()
   * @see #getFuncDefinition()
   * @generated
   */
  EAttribute getFuncDefinition_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.FuncDefinition#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see org.xtext.labs.mydsl.FuncDefinition#getArgs()
   * @see #getFuncDefinition()
   * @generated
   */
  EReference getFuncDefinition_Args();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.FuncDefinition#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.labs.mydsl.FuncDefinition#getBody()
   * @see #getFuncDefinition()
   * @generated
   */
  EReference getFuncDefinition_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.AbstractMethodCall <em>Abstract Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Method Call</em>'.
   * @see org.xtext.labs.mydsl.AbstractMethodCall
   * @generated
   */
  EClass getAbstractMethodCall();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.AbstractMethodCall#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see org.xtext.labs.mydsl.AbstractMethodCall#getArgs()
   * @see #getAbstractMethodCall()
   * @generated
   */
  EReference getAbstractMethodCall_Args();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.StdFunction <em>Std Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Std Function</em>'.
   * @see org.xtext.labs.mydsl.StdFunction
   * @generated
   */
  EClass getStdFunction();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.StdFunction#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.labs.mydsl.StdFunction#getName()
   * @see #getStdFunction()
   * @generated
   */
  EAttribute getStdFunction_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.IfExpression <em>If Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Expression</em>'.
   * @see org.xtext.labs.mydsl.IfExpression
   * @generated
   */
  EClass getIfExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.labs.mydsl.IfExpression#getIfconditon <em>Ifconditon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ifconditon</em>'.
   * @see org.xtext.labs.mydsl.IfExpression#getIfconditon()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Ifconditon();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.IfExpression#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Then</em>'.
   * @see org.xtext.labs.mydsl.IfExpression#getThen()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Then();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.IfExpression#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else</em>'.
   * @see org.xtext.labs.mydsl.IfExpression#getElse()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.DoWhileExpression <em>Do While Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do While Expression</em>'.
   * @see org.xtext.labs.mydsl.DoWhileExpression
   * @generated
   */
  EClass getDoWhileExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.labs.mydsl.DoWhileExpression#getLoopConditon <em>Loop Conditon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loop Conditon</em>'.
   * @see org.xtext.labs.mydsl.DoWhileExpression#getLoopConditon()
   * @see #getDoWhileExpression()
   * @generated
   */
  EReference getDoWhileExpression_LoopConditon();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.DoWhileExpression#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.labs.mydsl.DoWhileExpression#getBody()
   * @see #getDoWhileExpression()
   * @generated
   */
  EReference getDoWhileExpression_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.BrkStr <em>Brk Str</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Brk Str</em>'.
   * @see org.xtext.labs.mydsl.BrkStr
   * @generated
   */
  EClass getBrkStr();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.BrkStr#getBrk <em>Brk</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brk</em>'.
   * @see org.xtext.labs.mydsl.BrkStr#getBrk()
   * @see #getBrkStr()
   * @generated
   */
  EAttribute getBrkStr_Brk();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varAssignment <em>var Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Assignment</em>'.
   * @see org.xtext.labs.mydsl.varAssignment
   * @generated
   */
  EClass getvarAssignment();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.labs.mydsl.varAssignment#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.labs.mydsl.varAssignment#getLeft()
   * @see #getvarAssignment()
   * @generated
   */
  EReference getvarAssignment_Left();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.labs.mydsl.varAssignment#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Op</em>'.
   * @see org.xtext.labs.mydsl.varAssignment#getOp()
   * @see #getvarAssignment()
   * @generated
   */
  EAttribute getvarAssignment_Op();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.varAssignment#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Right</em>'.
   * @see org.xtext.labs.mydsl.varAssignment#getRight()
   * @see #getvarAssignment()
   * @generated
   */
  EReference getvarAssignment_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.StringRef <em>String Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Ref</em>'.
   * @see org.xtext.labs.mydsl.StringRef
   * @generated
   */
  EClass getStringRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.StringRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.labs.mydsl.StringRef#getValue()
   * @see #getStringRef()
   * @generated
   */
  EAttribute getStringRef_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.numRef <em>num Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>num Ref</em>'.
   * @see org.xtext.labs.mydsl.numRef
   * @generated
   */
  EClass getnumRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.numRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.labs.mydsl.numRef#getValue()
   * @see #getnumRef()
   * @generated
   */
  EAttribute getnumRef_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.boolRef <em>bool Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>bool Ref</em>'.
   * @see org.xtext.labs.mydsl.boolRef
   * @generated
   */
  EClass getboolRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.labs.mydsl.boolRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Ref</em>'.
   * @see org.xtext.labs.mydsl.boolRef#getVarRef()
   * @see #getboolRef()
   * @generated
   */
  EAttribute getboolRef_VarRef();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.arrayRef <em>array Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array Ref</em>'.
   * @see org.xtext.labs.mydsl.arrayRef
   * @generated
   */
  EClass getarrayRef();

  /**
   * Returns the meta object for the reference '{@link org.xtext.labs.mydsl.arrayRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var Ref</em>'.
   * @see org.xtext.labs.mydsl.arrayRef#getVarRef()
   * @see #getarrayRef()
   * @generated
   */
  EReference getarrayRef_VarRef();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.labs.mydsl.arrayRef#getDim <em>Dim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dim</em>'.
   * @see org.xtext.labs.mydsl.arrayRef#getDim()
   * @see #getarrayRef()
   * @generated
   */
  EReference getarrayRef_Dim();

  /**
   * Returns the meta object for class '{@link org.xtext.labs.mydsl.varRef <em>var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Ref</em>'.
   * @see org.xtext.labs.mydsl.varRef
   * @generated
   */
  EClass getvarRef();

  /**
   * Returns the meta object for the reference '{@link org.xtext.labs.mydsl.varRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var Ref</em>'.
   * @see org.xtext.labs.mydsl.varRef#getVarRef()
   * @see #getvarRef()
   * @generated
   */
  EReference getvarRef_VarRef();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MydslFactory getMydslFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.DSLProgramImpl <em>DSL Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.DSLProgramImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getDSLProgram()
     * @generated
     */
    EClass DSL_PROGRAM = eINSTANCE.getDSLProgram();

    /**
     * The meta object literal for the '<em><b>Global</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DSL_PROGRAM__GLOBAL = eINSTANCE.getDSLProgram_Global();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DSL_PROGRAM__FUNC = eINSTANCE.getDSLProgram_Func();

    /**
     * The meta object literal for the '<em><b>Main</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DSL_PROGRAM__MAIN = eINSTANCE.getDSLProgram_Main();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.mainDeclaredImpl <em>main Declared</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.mainDeclaredImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getmainDeclared()
     * @generated
     */
    EClass MAIN_DECLARED = eINSTANCE.getmainDeclared();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAIN_DECLARED__BODY = eINSTANCE.getmainDeclared_Body();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.BodyStatementImpl <em>Body Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.BodyStatementImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getBodyStatement()
     * @generated
     */
    EClass BODY_STATEMENT = eINSTANCE.getBodyStatement();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varReturnImpl <em>var Return</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varReturnImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarReturn()
     * @generated
     */
    EClass VAR_RETURN = eINSTANCE.getvarReturn();

    /**
     * The meta object literal for the '<em><b>Rtn</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_RETURN__RTN = eINSTANCE.getvarReturn_Rtn();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varDeclaredImpl <em>var Declared</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varDeclaredImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarDeclared()
     * @generated
     */
    EClass VAR_DECLARED = eINSTANCE.getvarDeclared();

    /**
     * The meta object literal for the '<em><b>Scope</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARED__SCOPE = eINSTANCE.getvarDeclared_Scope();

    /**
     * The meta object literal for the '<em><b>Dim</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARED__DIM = eINSTANCE.getvarDeclared_Dim();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varExpressionImpl <em>var Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varExpressionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarExpression()
     * @generated
     */
    EClass VAR_EXPRESSION = eINSTANCE.getvarExpression();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.TerminalImpl <em>Terminal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.TerminalImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getTerminal()
     * @generated
     */
    EClass TERMINAL = eINSTANCE.getTerminal();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varSymbolImpl <em>var Symbol</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varSymbolImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarSymbol()
     * @generated
     */
    EClass VAR_SYMBOL = eINSTANCE.getvarSymbol();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_SYMBOL__NAME = eINSTANCE.getvarSymbol_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_SYMBOL__TYPE = eINSTANCE.getvarSymbol_Type();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.TerminalOrMethodImpl <em>Terminal Or Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.TerminalOrMethodImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getTerminalOrMethod()
     * @generated
     */
    EClass TERMINAL_OR_METHOD = eINSTANCE.getTerminalOrMethod();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.arrayDimensionImpl <em>array Dimension</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.arrayDimensionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getarrayDimension()
     * @generated
     */
    EClass ARRAY_DIMENSION = eINSTANCE.getarrayDimension();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_DIMENSION__INDEX = eINSTANCE.getarrayDimension_Index();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARRAY_DIMENSION__SIZE = eINSTANCE.getarrayDimension_Size();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.FuncCallImpl <em>Func Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.FuncCallImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncCall()
     * @generated
     */
    EClass FUNC_CALL = eINSTANCE.getFuncCall();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_CALL__FUNC = eINSTANCE.getFuncCall_Func();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.FuncParameterImpl <em>Func Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.FuncParameterImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncParameter()
     * @generated
     */
    EClass FUNC_PARAMETER = eINSTANCE.getFuncParameter();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.FuncDefinitionImpl <em>Func Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.FuncDefinitionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getFuncDefinition()
     * @generated
     */
    EClass FUNC_DEFINITION = eINSTANCE.getFuncDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNC_DEFINITION__NAME = eINSTANCE.getFuncDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_DEFINITION__ARGS = eINSTANCE.getFuncDefinition_Args();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_DEFINITION__BODY = eINSTANCE.getFuncDefinition_Body();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.AbstractMethodCallImpl <em>Abstract Method Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.AbstractMethodCallImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getAbstractMethodCall()
     * @generated
     */
    EClass ABSTRACT_METHOD_CALL = eINSTANCE.getAbstractMethodCall();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ABSTRACT_METHOD_CALL__ARGS = eINSTANCE.getAbstractMethodCall_Args();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.StdFunctionImpl <em>Std Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.StdFunctionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getStdFunction()
     * @generated
     */
    EClass STD_FUNCTION = eINSTANCE.getStdFunction();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STD_FUNCTION__NAME = eINSTANCE.getStdFunction_Name();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.IfExpressionImpl <em>If Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.IfExpressionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getIfExpression()
     * @generated
     */
    EClass IF_EXPRESSION = eINSTANCE.getIfExpression();

    /**
     * The meta object literal for the '<em><b>Ifconditon</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__IFCONDITON = eINSTANCE.getIfExpression_Ifconditon();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__THEN = eINSTANCE.getIfExpression_Then();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__ELSE = eINSTANCE.getIfExpression_Else();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.DoWhileExpressionImpl <em>Do While Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.DoWhileExpressionImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getDoWhileExpression()
     * @generated
     */
    EClass DO_WHILE_EXPRESSION = eINSTANCE.getDoWhileExpression();

    /**
     * The meta object literal for the '<em><b>Loop Conditon</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_WHILE_EXPRESSION__LOOP_CONDITON = eINSTANCE.getDoWhileExpression_LoopConditon();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_WHILE_EXPRESSION__BODY = eINSTANCE.getDoWhileExpression_Body();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.BrkStrImpl <em>Brk Str</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.BrkStrImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getBrkStr()
     * @generated
     */
    EClass BRK_STR = eINSTANCE.getBrkStr();

    /**
     * The meta object literal for the '<em><b>Brk</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BRK_STR__BRK = eINSTANCE.getBrkStr_Brk();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varAssignmentImpl <em>var Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varAssignmentImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarAssignment()
     * @generated
     */
    EClass VAR_ASSIGNMENT = eINSTANCE.getvarAssignment();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGNMENT__LEFT = eINSTANCE.getvarAssignment_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_ASSIGNMENT__OP = eINSTANCE.getvarAssignment_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGNMENT__RIGHT = eINSTANCE.getvarAssignment_Right();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.StringRefImpl <em>String Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.StringRefImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getStringRef()
     * @generated
     */
    EClass STRING_REF = eINSTANCE.getStringRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_REF__VALUE = eINSTANCE.getStringRef_Value();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.numRefImpl <em>num Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.numRefImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getnumRef()
     * @generated
     */
    EClass NUM_REF = eINSTANCE.getnumRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUM_REF__VALUE = eINSTANCE.getnumRef_Value();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.boolRefImpl <em>bool Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.boolRefImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getboolRef()
     * @generated
     */
    EClass BOOL_REF = eINSTANCE.getboolRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_REF__VAR_REF = eINSTANCE.getboolRef_VarRef();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.arrayRefImpl <em>array Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.arrayRefImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getarrayRef()
     * @generated
     */
    EClass ARRAY_REF = eINSTANCE.getarrayRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__VAR_REF = eINSTANCE.getarrayRef_VarRef();

    /**
     * The meta object literal for the '<em><b>Dim</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__DIM = eINSTANCE.getarrayRef_Dim();

    /**
     * The meta object literal for the '{@link org.xtext.labs.mydsl.impl.varRefImpl <em>var Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.labs.mydsl.impl.varRefImpl
     * @see org.xtext.labs.mydsl.impl.MydslPackageImpl#getvarRef()
     * @generated
     */
    EClass VAR_REF = eINSTANCE.getvarRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_REF__VAR_REF = eINSTANCE.getvarRef_VarRef();

  }

} //MydslPackage
