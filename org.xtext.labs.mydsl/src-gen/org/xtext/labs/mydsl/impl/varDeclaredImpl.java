/**
 * generated by Xtext 2.12.0
 */
package org.xtext.labs.mydsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.labs.mydsl.MydslPackage;
import org.xtext.labs.mydsl.arrayDimension;
import org.xtext.labs.mydsl.varDeclared;
import org.xtext.labs.mydsl.varSymbol;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>var Declared</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.labs.mydsl.impl.varDeclaredImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.labs.mydsl.impl.varDeclaredImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.labs.mydsl.impl.varDeclaredImpl#getScope <em>Scope</em>}</li>
 *   <li>{@link org.xtext.labs.mydsl.impl.varDeclaredImpl#getDim <em>Dim</em>}</li>
 * </ul>
 *
 * @generated
 */
public class varDeclaredImpl extends BodyStatementImpl implements varDeclared
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected static final String SCOPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected String scope = SCOPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getDim() <em>Dim</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDim()
   * @generated
   * @ordered
   */
  protected EList<arrayDimension> dim;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected varDeclaredImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MydslPackage.Literals.VAR_DECLARED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MydslPackage.VAR_DECLARED__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MydslPackage.VAR_DECLARED__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScope(String newScope)
  {
    String oldScope = scope;
    scope = newScope;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MydslPackage.VAR_DECLARED__SCOPE, oldScope, scope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<arrayDimension> getDim()
  {
    if (dim == null)
    {
      dim = new EObjectContainmentEList<arrayDimension>(arrayDimension.class, this, MydslPackage.VAR_DECLARED__DIM);
    }
    return dim;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MydslPackage.VAR_DECLARED__DIM:
        return ((InternalEList<?>)getDim()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MydslPackage.VAR_DECLARED__NAME:
        return getName();
      case MydslPackage.VAR_DECLARED__TYPE:
        return getType();
      case MydslPackage.VAR_DECLARED__SCOPE:
        return getScope();
      case MydslPackage.VAR_DECLARED__DIM:
        return getDim();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MydslPackage.VAR_DECLARED__NAME:
        setName((String)newValue);
        return;
      case MydslPackage.VAR_DECLARED__TYPE:
        setType((String)newValue);
        return;
      case MydslPackage.VAR_DECLARED__SCOPE:
        setScope((String)newValue);
        return;
      case MydslPackage.VAR_DECLARED__DIM:
        getDim().clear();
        getDim().addAll((Collection<? extends arrayDimension>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MydslPackage.VAR_DECLARED__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MydslPackage.VAR_DECLARED__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MydslPackage.VAR_DECLARED__SCOPE:
        setScope(SCOPE_EDEFAULT);
        return;
      case MydslPackage.VAR_DECLARED__DIM:
        getDim().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MydslPackage.VAR_DECLARED__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MydslPackage.VAR_DECLARED__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MydslPackage.VAR_DECLARED__SCOPE:
        return SCOPE_EDEFAULT == null ? scope != null : !SCOPE_EDEFAULT.equals(scope);
      case MydslPackage.VAR_DECLARED__DIM:
        return dim != null && !dim.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == varSymbol.class)
    {
      switch (derivedFeatureID)
      {
        case MydslPackage.VAR_DECLARED__NAME: return MydslPackage.VAR_SYMBOL__NAME;
        case MydslPackage.VAR_DECLARED__TYPE: return MydslPackage.VAR_SYMBOL__TYPE;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == varSymbol.class)
    {
      switch (baseFeatureID)
      {
        case MydslPackage.VAR_SYMBOL__NAME: return MydslPackage.VAR_DECLARED__NAME;
        case MydslPackage.VAR_SYMBOL__TYPE: return MydslPackage.VAR_DECLARED__TYPE;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", type: ");
    result.append(type);
    result.append(", scope: ");
    result.append(scope);
    result.append(')');
    return result.toString();
  }

} //varDeclaredImpl
