/*
 * generated by Xtext 2.12.0
 */
package org.xtext.labs.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter
import org.xtext.labs.mydsl.AbstractMethodCall
import org.xtext.labs.mydsl.BodyStatement
import org.xtext.labs.mydsl.BrkStr
import org.xtext.labs.mydsl.DSLProgram
import org.xtext.labs.mydsl.DoWhileExpression
import org.xtext.labs.mydsl.FuncCall
import org.xtext.labs.mydsl.FuncDefinition
import org.xtext.labs.mydsl.IfExpression
import org.xtext.labs.mydsl.mainDeclared
import org.xtext.labs.mydsl.varDeclared
import org.xtext.labs.mydsl.varReturn
import org.xtext.labs.mydsl.varExpression
import org.xtext.labs.services.MydslGrammarAccess

class MydslFormatter extends XbaseFormatter {

	@Inject extension MydslGrammarAccess

	/**
	 * @comment:kim
	 * dispatch is override keyword in xtend
	 */
	def dispatch void format(DSLProgram dSLProgram, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (varDeclared varDec : dSLProgram.getGlobal()) {
			varDec.format;
		}

		for (FuncDefinition funcDefinition : dSLProgram.getFunc()) {
			funcDefinition.format;
		}
		dSLProgram.getMain.format;
	}

	def dispatch void format(mainDeclared d, extension IFormattableDocument document) {
		
		d.regionFor.keyword(getMainDeclaredAccess.getLeftCurlyBracketKeyword_4).append[setNewLines(1, 1, 2)]
		
		for (BodyStatement bodyStatement : d.getBody()) {
			bodyStatement.format;
		}
		
		interior(
			d.regionFor.keyword(getMainDeclaredAccess.getLeftCurlyBracketKeyword_4), 
			d.regionFor.keyword(getMainDeclaredAccess.getRightCurlyBracketKeyword_6),
			[indent]
		)
	}

	def dispatch void format(varDeclared d, extension IFormattableDocument document) {
		if (d.eContainer instanceof DSLProgram) {
			d.prepend[noSpace]
		}

		d.append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(FuncDefinition d, extension IFormattableDocument document) {
		d.regionFor.keyword("def").prepend[setNewLines(1, 1, 2)]
		d.regionFor.keyword("{").append[setNewLines(1, 1, 2)]

		interior(
			d.regionFor.keyword("{"),
			d.regionFor.keyword("}")
		)[indent]

		for (bd : d.body) {
			bd.format
		}

		d.regionFor.keyword("}").append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(BodyStatement p, extension IFormattableDocument document) {
		switch (p) {
			IfExpression:
				p.format
			DoWhileExpression:
				p.format
			varExpression:
				p.format
			BrkStr:
				p.format
			FuncCall:
				p.format
			varReturn:
				p.format
			varDeclared:
				p.format
		}
	}
	
	def dispatch void format(varExpression d, extension IFormattableDocument document) {
		d.prepend[setNewLines(1, 1, 2)]
		d.append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(BrkStr d, extension IFormattableDocument document) {
		d.prepend[setNewLines(1, 1, 2)]
		d.append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(varReturn d, extension IFormattableDocument document) {
		d.prepend[setNewLines(1, 1, 2)]
		d.append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(FuncCall d, extension IFormattableDocument document) {
		d.prepend[setNewLines(1, 1, 2)]
		d.append[setNewLines(1, 1, 2)]
	}

	def dispatch void format(IfExpression d, extension IFormattableDocument document) {
		d.regionFor.keyword("if").prepend[indent].prepend[setNewLines(1, 1, 2)]
		d.regionFor.keyword(ifExpressionAccess.getLeftCurlyBracketKeyword_5).append[setNewLines(1, 1, 2)]

		for (bodypart : d.then) {
			bodypart.format
		}

		if (d.^else !== null && d.^else.size !== 0) {
			interior(
				d.regionFor.keyword("if"),
				d.regionFor.keyword("else"),
				[indent]
			)
			//@comment: other way to input inside keyword function.
			interior(
				d.regionFor.keyword(ifExpressionAccess.elseKeyword_7_1), 
				d.regionFor.keyword(ifExpressionAccess.rightCurlyBracketKeyword_8),
				[indent]
			)
			d.regionFor.keyword(ifExpressionAccess.getRightCurlyBracketKeyword_7_0).prepend[setNewLines(1, 1, 2)]
			d.regionFor.keyword(ifExpressionAccess.getLeftCurlyBracketKeyword_7_2).append[setNewLines(1, 1, 2)]

			for (bodypart : d.^else) {
				bodypart.format
			}
		} else {
			interior(
				d.regionFor.keyword(ifExpressionAccess.getIfKeyword_1),
				d.regionFor.keyword(ifExpressionAccess.rightCurlyBracketKeyword_8),
				[indent]
			)
		}

		d.regionFor.keyword(ifExpressionAccess.rightCurlyBracketKeyword_8).prepend[indent].prepend[setNewLines(1, 1, 2)]
		d.regionFor.keyword(ifExpressionAccess.rightCurlyBracketKeyword_8).append[setNewLines(1, 1, 2)]

	}

	def dispatch void format(DoWhileExpression d, extension IFormattableDocument document) {
		d.regionFor.keyword("while").prepend[indent].prepend[setNewLines(1, 1, 2)]

		// @comment: can be assign append method directly to eObject elements without regionFor : kim 
		//d.loopConditon.append[setNewLines(1, 1, 2)]

		for (bodypart : d.body) {
			bodypart.format
		}

		d.regionFor.keyword(doWhileExpressionAccess.getRightCurlyBracketKeyword_7).prepend[indent].prepend[setNewLines(1, 1, 2)]

		interior(
			d.regionFor.keyword(doWhileExpressionAccess.getWhileKeyword_1),
			d.regionFor.keyword(doWhileExpressionAccess.getRightCurlyBracketKeyword_7)
		)[indent]

		d.regionFor.keyword(doWhileExpressionAccess.getRightCurlyBracketKeyword_7).append[setNewLines(1, 1, 2)]

	}

}
